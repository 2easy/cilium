name: Image CI Build

on:
#  pull_request_target:
#    types:
#      - opened
#      - synchronize
#      - reopened
  push:
    branches:
      - pr/addmadvdontneed

jobs:
  build-and-push-prs:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: cilium
            dockerfile: ./Dockerfile
          - name: operator
            dockerfile: ./cilium-operator.Dockerfile
          - name: operator-aws
            dockerfile: ./cilium-operator-aws.Dockerfile
          - name: operator-azure
            dockerfile: ./cilium-operator-azure.Dockerfile
          - name: operator-generic
            dockerfile: ./cilium-operator-generic.Dockerfile
          - name: hubble-relay
            dockerfile: ./hubble-relay.Dockerfile
          - name: clustermesh-apiserver
            dockerfile: ./clustermesh-apiserver.Dockerfile
          - name: docker-plugin
            dockerfile: ./cilium-docker-plugin.Dockerfile
    steps:
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF##*/}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Checkout PR Source Code
        uses: actions/checkout@v2
# uncomment once it's pushed into production
#        with:
#         ref: ${{ github.event.pull_request.head.sha }}
      - name: Login to DockerHub to avoid rate limit
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME_CI }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD_CI }}
      - name: Login to quay.io for CI
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME_CI }}
          password: ${{ secrets.QUAY_PASSWORD_CI }}
      - name: CI Build ${{ matrix.name }}
        uses: docker/build-push-action@v2
        id: docker_build_ci
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ github.sha }}
      - name: CI Image Releases digests
        shell: bash
        run: |
          mkdir -p image-digest/
          echo "quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ github.sha }}@${{ steps.docker_build_ci.outputs.digest }}" > image-digest/${{ matrix.name }}.txt

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@v2
        with:
          name: image-digest ${{ matrix.name }}
          path: image-digest
          retention-days: 1
  image-digests:
    name: Display Digests
    runs-on: ubuntu-20.04
    needs: build-and-push-prs
    steps:
      - name: Downloading Image Digests
        shell: bash
        run: |
          mkdir -p image-digest/
      - name: Download digests of all images built
        uses: actions/download-artifact@v2
        with:
          path: image-digest/

      - name: Image Digests Output
        shell: bash
        run: |
          cd image-digest/
          find -type f -exec cat {} \;
